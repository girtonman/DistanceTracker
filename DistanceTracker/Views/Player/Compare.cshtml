@using DistanceTracker.Models
@model PlayerComparisonViewModel

@{
	ViewData["Title"] = $"Player Comparison";
}

<div class="text-center">
	<div class="row">
		<div class="col-8 offset-2">
			<form class="form mb-4" method="get">
				<div class="input-group mb-3">
					<input type="text" class="form-control" name="steamIDs" placeholder="Enter comma separated steam IDs" @(Model != null ? $"value={Model.SteamIDs}" : "")>
					<div class="input-group-append">
						<button type="submit" class="btn btn-outline-success">Compare</button>
					</div>
				</div>
			</form>
		</div>
		@if (Model != null)
		{
		<div class="col-12">
			<h4 class="text-left">Track Rankings Comparison</h4>
			<table class="table table-striped table-dark">
				<thead>
					<tr>
						<th>Track</th>
						@foreach (var player in Model.Players)
						{
						<th>@player.Name's Rank</th>
						}
					</tr>
				</thead>
				<tbody>
					@foreach (var row in Model.Comparisons)
					{
						var bestEntry = row.RankedEntries.Where(x => x.Value != null).OrderBy(x => x.Value.Rank).FirstOrDefault();
						var bestSteamID = bestEntry.Equals(default(KeyValuePair<ulong, RankedLeaderboardEntry>)) ? 0 : bestEntry.Key;
						<tr>
							<td>@row.Leaderboard.LevelName</td>
							@foreach (var player in Model.Players)
							{
								var entry = row.RankedEntries[player.SteamID];
								if (entry == null)
								{
									<td></td>
								}
								else
								{
									<td><span class="@(player.SteamID == bestSteamID ? "text-success" : "")">@(entry == null ? "-" : entry.Rank.ToString())</span></td>
								}
							}
						</tr>
					}
				</tbody>
			</table>
		</div>
		}
	</div>

</div>
