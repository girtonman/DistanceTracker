@using DistanceTracker.Models
@model PlayerViewModel

@{
	ViewData["Title"] = $"Player: {Model.Player.Name}";
}

<div class="text-center">
	<h1>@Model.Player.Name</h1>
	<hr />

	<div class="row">
		<div class="col">
			<h5>Global Rank</h5>
			<h2>@(Model.GlobalLeaderboardEntry.Rank)th</h2>
			<h6>Last 24h: <i class="fas fa-arrow-up fa-sm text-success"></i> @Model.LastDaysRankImprovement</h6>
		</div>
		<div class="col">
			<h5>Points</h5>
			<h2>@Model.GlobalLeaderboardEntry.NoodlePoints</h2>
			<h6>Last 24h: <i class="fas fa-arrow-up fa-sm text-success"></i> @Model.LastDaysPointsImprovement</h6>
		</div>
		<div class="col">
			<h5>Rating</h5>
			<h2>@Model.GlobalLeaderboardEntry.PlayerRating</h2>
			<h6>Last 24h: <i class="fas fa-arrow-up fa-sm text-success"></i> @Model.LastDaysRatingImprovement.ToString("0.00")</h6>
		</div>
	</div>

	<hr style="border-top: 1px solid #c8c8c8"/>

	<div class="row">
		<div class="col-4">
			<h4 class="text-left">Track Rankings</h4>
			<table class="table table-striped table-dark">
				<thead>
					<tr>
						<th class="text-left">Track</th>
						<th>Rank</th>
						<th>Points</th>
						<th>Rating</th>
					</tr>
				</thead>
				<tbody>
					@foreach(var entry in Model.RankedLeaderboardEntries)
					{
						@if (entry != null)
						{
							<tr>
								<td>@entry.Leaderboard.LevelName</td>
								<td>@entry.Rank</td>
								<td>@entry.NoodlePoints.ToString("0")</td>
								<td>@entry.PlayerRating.ToString("0.00")</td>
							</tr>
						}
					}
				</tbody>
			</table>
		</div>
		<div class="col">
			<h4 class="text-left">Recent Activity</h4>
			<table class="table table-striped table-dark">
				<thead>
					<tr>
						<th>Track</th>
						<th>Rank</th>
						<th>Time</th>
						<th>When</th>
					</tr>
				</thead>
				<tbody>
					@foreach(var entry in Model.RecentActivity)
					{
						@if (entry.Sighting != null)
						{
							<tr>
								<td>@entry.Sighting.Leaderboard.LevelName</td>
								<td>@*TODO*@</td>
								<td>@Formatter.TimeFromMs(entry.Sighting.Milliseconds) <span class="text-success">New!</span></td>
								<td>@Formatter.TimeAgoFromUnixTime(entry.TimeUTC)</td>
							</tr>
						}
						else
						{
							<tr>
								<td>@entry.Improvement.Leaderboard.LevelName</td>
								<td>@entry.Improvement.NewRank ( <i class="fas fa-arrow-up fa-sm text-success"></i> @(entry.Improvement.OldRank - entry.Improvement.NewRank) )</td>
								<td>@Formatter.TimeFromMs(entry.Improvement.NewMilliseconds) ( <i class="fas fa-arrow-up fa-sm text-success"></i> @Formatter.TimeFromMs(entry.Improvement.OldMilliseconds - entry.Improvement.NewMilliseconds) )</td>
								<td>@Formatter.TimeAgoFromUnixTime(entry.TimeUTC)</td>
							</tr>
						}
					}
				</tbody>
			</table>
		</div>
	</div>

</div>
